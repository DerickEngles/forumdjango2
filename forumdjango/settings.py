"""
Django settings for forumdjango project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-3am(-2=*kw%@vhv57#flcqgxj#9xhzheoct_av4_f+_f3ybs(+'  # I took the secret key out in order to have security

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',
    'bootstrap4',
    'stdimage'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',  # apropriado para autenticação
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # apropriado para autenticação
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'forumdjango.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'forumdjango.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'forumdjango',
        'USER': 'root',
        'PASSWORD': '@database1997',  # You need to put the password of your own local database MySQL
        'HOST': 'localhost',
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = Path.joinpath(BASE_DIR, 'staticfiles')

# As config. abaixo servem para realização de uploads de arquivos
MEDIA_URL = 'media/'
MEDIA_ROOT = Path.joinpath(BASE_DIR, 'media')

# Confi. de e-mail
EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"  # Vai disparar um alerta no meu Terminal

"""
Estamos removendo a configuração abaixo, pois vamos utilizar um backend de autenticação personalizado
Retomamos a configuração abaixo.
"""
# Adicionando a configuração para o backend de autenticação
AUTHENTICATION_BACKEDNS = [
    'django.contrib.auth.backends.ModelBackend'
]
"""
# Defina o caminho para o seu modelo de usuário de usuário personalizado
AUTH_USER_MODEL = 'core.Register'  # aqui especificamos o caminho do model de autenticação
# Adicione o back-end de autenticação personalizado ao AUTHENTICATION_BACKENDS
AUTHENTICATION_BACKENDS = ['core.backends.EmailBackend']  # aqui especificamos qual o nome do modelo de autenticação
# personalizado que desejamos usar.
"""

# Defina a URL de redirecionamento para o login
LOGIN_URL = 'index'  # Quando o usuário tentar acessar uma página que necessita de autenticação, ele será
# redirecionado para index - A única página que necessita de autenticação é a de criação de posts. Ao invés de
# redirecionar o anonymususer, vou criar um pop indicando que ele se registre ou log caso já tenha uma conta.
LOGIN_REDIRECT_URL = 'index'  # nome que atribuímos a rota principal em url em core. O usuário será redirecionado para
# index quando estiver autenticado.
LOGOUT_REDIRECT_URL = 'index'  # O mesmo ocorrerá ao realizar logout, o usuário será levado para index

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
